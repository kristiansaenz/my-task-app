{"ast":null,"code":"var _jsxFileName = \"/Users/kristian/Desktop/codebase/my-task-list/task-app/src/App.js\";\nimport React from 'react';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport uuid from 'uuid';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //js object called todos\n      todos: [{\n        id: uuid.v4(),\n        title: 'Take out the trash',\n        completed: false\n      }, {\n        id: uuid.v4(),\n        title: 'Water my plant bbs',\n        completed: false\n      }, {\n        id: uuid.v4(),\n        title: 'Go to the gym',\n        completed: false\n      }]\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            // here we need to toggle todo\n            // if i set it to true, it will just stay true\n            // that way if its completed and you click it again, its the opposite\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.deleteTodo = id => {\n      // filter out ids that don't match the id being clicked\n      // basically we want to show other ids, not one we are deleting\n      // spread operator copies curent array of todos\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = title => {\n      const newTodo = {\n        id: uuid.v4(),\n        title,\n        completed: false //concat returns new array with new todo item\n        // NOTE: i didnt use push because push returns length (num) of new array\n\n      };\n      this.setState({\n        todos: [...this.state.todos.concat(newTodo)]\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(AddTodo, {\n      addTodo: this.addTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }), React.createElement(Todos, {\n      todos: this.state.todos,\n      markComplete: this.markComplete,\n      deleteTodo: this.deleteTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App; //funtion component = stateless component / no lifecycle methods\n//class componenent = stateful component with lifecycle methods","map":{"version":3,"sources":["/Users/kristian/Desktop/codebase/my-task-list/task-app/src/App.js"],"names":["React","Todos","Header","AddTodo","uuid","App","Component","state","todos","id","v4","title","completed","markComplete","setState","map","todo","deleteTodo","filter","addTodo","newTodo","concat","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AAEN;AACAC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,EAAE,EAAEL,IAAI,CAACM,EAAL,EADN;AAEEC,QAAAA,KAAK,EAAE,oBAFT;AAGEC,QAAAA,SAAS,EAAE;AAHb,OADK,EAML;AACEH,QAAAA,EAAE,EAAEL,IAAI,CAACM,EAAL,EADN;AAEEC,QAAAA,KAAK,EAAE,oBAFT;AAGEC,QAAAA,SAAS,EAAE;AAHb,OANK,EAWL;AACEH,QAAAA,EAAE,EAAEL,IAAI,CAACM,EAAL,EADN;AAEEC,QAAAA,KAAK,EAAE,eAFT;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAXK;AAHD,KADwB;;AAAA,SAuB9BC,YAvB8B,GAuBdJ,EAAD,IAAQ;AACnB,WAAKK,QAAL,CAAc;AACZN,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBO,GAAjB,CAAqBC,IAAI,IAAI;AAClC,cAAGA,IAAI,CAACP,EAAL,KAAYA,EAAf,EAAmB;AACjB;AACA;AACA;AACAO,YAAAA,IAAI,CAACJ,SAAL,GAAiB,CAACI,IAAI,CAACJ,SAAvB;AACD;;AACD,iBAAOI,IAAP;AACD,SARM;AADK,OAAd;AAWH,KAnC6B;;AAAA,SAqC9BC,UArC8B,GAqChBR,EAAD,IAAQ;AACnB;AACA;AACA;AACA,WAAKK,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,MAAjB,CAAwBF,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAA5C,CAAJ;AAAT,OAAd;AACD,KA1C6B;;AAAA,SA4C9BU,OA5C8B,GA4CnBR,KAAD,IAAW;AAEjB,YAAMS,OAAO,GAAG;AACdX,QAAAA,EAAE,EAAEL,IAAI,CAACM,EAAL,EADU;AAEdC,QAAAA,KAFc;AAGdC,QAAAA,SAAS,EAAE,KAHG,CAMhB;AACA;;AAPgB,OAAhB;AAQA,WAAKE,QAAL,CAAc;AAAEN,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBa,MAAjB,CAAwBD,OAAxB,CAAJ;AAAT,OAAd;AAGH,KAzD6B;AAAA;;AA2DhCE,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKH,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAGI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,KAAKZ,KAAL,CAAWC,KADtB;AAEI,MAAA,YAAY,EAAE,KAAKK,YAFvB;AAGI,MAAA,UAAU,EAAE,KAAKI,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADF,CADF;AAYA;;AAxE8B;;AA2ElC,eAAeZ,GAAf,C,CAEA;AACA","sourcesContent":["import React from 'react';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport uuid from 'uuid';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    \n    //js object called todos\n    todos: [\n      {\n        id: uuid.v4(),\n        title: 'Take out the trash',\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Water my plant bbs',\n        completed: false\n      },\n      {\n        id: uuid.v4(),\n        title: 'Go to the gym',\n        completed: false\n      },\n    ]\n  }\n\n    markComplete = (id) => {\n        this.setState({\n          todos: this.state.todos.map(todo => {\n            if(todo.id === id) {\n              // here we need to toggle todo\n              // if i set it to true, it will just stay true\n              // that way if its completed and you click it again, its the opposite\n              todo.completed = !todo.completed\n            }\n            return todo;\n          }) \n        })\n    }\n\n    deleteTodo = (id) => {\n      // filter out ids that don't match the id being clicked\n      // basically we want to show other ids, not one we are deleting\n      // spread operator copies curent array of todos\n      this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)]});\n    }\n\n    addTodo = (title) => {\n\n        const newTodo = {\n          id: uuid.v4(),\n          title,\n          completed: false\n        }\n\n        //concat returns new array with new todo item\n        // NOTE: i didnt use push because push returns length (num) of new array\n        this.setState({ todos: [...this.state.todos.concat(newTodo)]\n\n        })\n    }\n    \n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n            <Header />\n            <AddTodo addTodo={this.addTodo} />\n            <Todos \n                todos={this.state.todos} \n                markComplete={this.markComplete} \n                deleteTodo={this.deleteTodo}\n            />\n        </div>\n      </div>\n  )};\n}\n\nexport default App;\n\n//funtion component = stateless component / no lifecycle methods\n//class componenent = stateful component with lifecycle methods\n\n"]},"metadata":{},"sourceType":"module"}