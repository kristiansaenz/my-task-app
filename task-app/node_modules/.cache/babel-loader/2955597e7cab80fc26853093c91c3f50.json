{"ast":null,"code":"var _jsxFileName = \"/Users/kristian/Desktop/codebase/my-task-list/task-app/src/components/TodoItem.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getStyle = () => {\n      return {\n        background: '#404040',\n        padding: '10px',\n        borderBottom: '1px #ccc dotted',\n        textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n      };\n    };\n  }\n\n  render() {\n    const _this$props$todo = this.props.todo,\n          id = _this$props$todo.id,\n          title = _this$props$todo.title;\n    return React.createElement(\"div\", {\n      style: this.getStyle(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      onChange: this.props.markComplete.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }), \"                \", React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, title), React.createElement(\"button\", {\n      style: btnStyle,\n      onClick: this.props.deleteTodo.bind(this, id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, \"x\"));\n  }\n\n} // PropTypes\n\n\nTodoItem.propTypes = {\n  todo: PropTypes.object.isRequired\n};\nconst btnStyle = {\n  background: '#ff0000',\n  color: '#fff',\n  border: 'none',\n  padding: '5px 10px',\n  borderRadius: '50%',\n  cursor: 'pointer',\n  float: 'right'\n};\nexport default TodoItem; // for using custom methods such as our markComplete method:\n// you can either use -> onChange={this.markComplete.bind(this)} to get access to props\n// or you can write your method like this -> markComplete = (e) => { }","map":{"version":3,"sources":["/Users/kristian/Desktop/codebase/my-task-list/task-app/src/components/TodoItem.js"],"names":["React","PropTypes","TodoItem","Component","getStyle","background","padding","borderBottom","textDecoration","props","todo","completed","render","id","title","markComplete","bind","btnStyle","deleteTodo","propTypes","object","isRequired","color","border","borderRadius","cursor","float"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAGA,MAAMC,QAAN,SAAuBF,KAAK,CAACG,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SAEnCC,QAFmC,GAExB,MAAM;AACb,aAAO;AACHC,QAAAA,UAAU,EAAE,SADT;AAEHC,QAAAA,OAAO,EAAE,MAFN;AAGHC,QAAAA,YAAY,EAAE,iBAHX;AAIHC,QAAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,IAAX,CAAgBC,SAAhB,GAA4B,cAA5B,GAA6C;AAJ1D,OAAP;AAMH,KATkC;AAAA;;AAWnCC,EAAAA,MAAM,GAAG;AAAA,6BACiB,KAAKH,KAAL,CAAWC,IAD5B;AAAA,UACGG,EADH,oBACGA,EADH;AAAA,UACOC,KADP,oBACOA,KADP;AAEL,WACI;AAAK,MAAA,KAAK,EAAE,KAAKV,QAAL,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,QAAQ,EAAE,KAAKK,KAAL,CAAWM,YAAX,CAAwBC,IAAxB,CAA6B,IAA7B,EAAmCH,EAAnC,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,sBACqG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAMC,KAAN,CADrG,EAEI;AAAQ,MAAA,KAAK,EAAEG,QAAf;AAAyB,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS,UAAX,CAAsBF,IAAtB,CAA2B,IAA3B,EAAiCH,EAAjC,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFJ,CADJ;AAKF;;AAlBiC,C,CAqBvC;;;AACAX,QAAQ,CAACiB,SAAT,GAAqB;AACjBT,EAAAA,IAAI,EAAET,SAAS,CAACmB,MAAV,CAAiBC;AADN,CAArB;AAIA,MAAMJ,QAAQ,GAAE;AACZZ,EAAAA,UAAU,EAAE,SADA;AAEZiB,EAAAA,KAAK,EAAE,MAFK;AAGZC,EAAAA,MAAM,EAAE,MAHI;AAIZjB,EAAAA,OAAO,EAAE,UAJG;AAKZkB,EAAAA,YAAY,EAAE,KALF;AAMZC,EAAAA,MAAM,EAAE,SANI;AAOZC,EAAAA,KAAK,EAAE;AAPK,CAAhB;AAUA,eAAexB,QAAf,C,CAGA;AACA;AACA","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\n\nclass TodoItem extends React.Component {\n\n    getStyle = () => {\n        return {\n            background: '#404040',\n            padding: '10px',\n            borderBottom: '1px #ccc dotted',\n            textDecoration: this.props.todo.completed ? 'line-through' : 'none'\n        }\n    }\n\n    render() {\n        const { id, title } = this.props.todo;\n        return (\n            <div style={this.getStyle()}>\n                <input type=\"checkbox\" onChange={this.props.markComplete.bind(this, id)}></input>                <h3>{ title }</h3>\n                <button style={btnStyle} onClick={this.props.deleteTodo.bind(this, id)}>x</button>\n            </div>\n    )};\n}\n\n// PropTypes\nTodoItem.propTypes = {\n    todo: PropTypes.object.isRequired\n}\n\nconst btnStyle ={\n    background: '#ff0000',\n    color: '#fff',\n    border: 'none',\n    padding: '5px 10px',\n    borderRadius: '50%',\n    cursor: 'pointer',\n    float: 'right'\n}\n\nexport default TodoItem;\n\n\n// for using custom methods such as our markComplete method:\n// you can either use -> onChange={this.markComplete.bind(this)} to get access to props\n// or you can write your method like this -> markComplete = (e) => { }\n"]},"metadata":{},"sourceType":"module"}