{"ast":null,"code":"var _jsxFileName = \"/Users/kristian/Desktop/codebase/my-task-list/task-app/src/App.js\";\nimport React from 'react';\nimport Todos from './components/Todos';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //js object called todos\n      todos: [{\n        id: 1,\n        title: 'Take out the trash',\n        completed: false\n      }, {\n        id: 2,\n        title: 'Water my plant bbs',\n        completed: false\n      }, {\n        id: 3,\n        title: 'Go to the gym',\n        completed: false\n      }]\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            // here we need to toggle todo\n            // if i set it to true, it will just stay true\n            // that way if its completed and you click it again, its the opposite\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.deleteTodo = id => {\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(Todos, {\n      todos: this.state.todos,\n      markComplete: this.markComplete,\n      deleteTodo: this.deleteTodo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App; //funtion component = stateless component / no lifecycle methods\n//class componenent = stateful component with lifecycle methods","map":{"version":3,"sources":["/Users/kristian/Desktop/codebase/my-task-list/task-app/src/App.js"],"names":["React","Todos","App","Component","state","todos","id","title","completed","markComplete","setState","map","todo","deleteTodo","filter","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAO,WAAP;;AAEA,MAAMC,GAAN,SAAkBF,KAAK,CAACG,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAChCC,KADgC,GACxB;AAEN;AACAC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,oBAFT;AAGEC,QAAAA,SAAS,EAAE;AAHb,OADK,EAML;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,oBAFT;AAGEC,QAAAA,SAAS,EAAE;AAHb,OANK,EAWL;AACEF,QAAAA,EAAE,EAAE,CADN;AAEEC,QAAAA,KAAK,EAAE,eAFT;AAGEC,QAAAA,SAAS,EAAE;AAHb,OAXK;AAHD,KADwB;;AAAA,SAuB9BC,YAvB8B,GAuBdH,EAAD,IAAQ;AACnB,WAAKI,QAAL,CAAc;AACZL,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,CAAiBM,GAAjB,CAAqBC,IAAI,IAAI;AAClC,cAAGA,IAAI,CAACN,EAAL,KAAYA,EAAf,EAAmB;AACjB;AACA;AACA;AACAM,YAAAA,IAAI,CAACJ,SAAL,GAAiB,CAACI,IAAI,CAACJ,SAAvB;AACD;;AACD,iBAAOI,IAAP;AACD,SARM;AADK,OAAd;AAWH,KAnC6B;;AAAA,SAqC9BC,UArC8B,GAqChBP,EAAD,IAAQ;AACnB,WAAKI,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,KAAX,CAAiBS,MAAjB,CAAwBF,IAAI,IAAIA,IAAI,CAACN,EAAL,KAAYA,EAA5C,CAAJ;AAAT,OAAd;AACD,KAvC6B;AAAA;;AAyChCS,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,KAAKX,KAAL,CAAWC,KADtB;AAEI,MAAA,YAAY,EAAE,KAAKI,YAFvB;AAGI,MAAA,UAAU,EAAE,KAAKI,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF;AAUA;;AApD8B;;AAuDlC,eAAeX,GAAf,C,CAEA;AACA","sourcesContent":["import React from 'react';\nimport Todos from './components/Todos';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    \n    //js object called todos\n    todos: [\n      {\n        id: 1,\n        title: 'Take out the trash',\n        completed: false\n      },\n      {\n        id: 2,\n        title: 'Water my plant bbs',\n        completed: false\n      },\n      {\n        id: 3,\n        title: 'Go to the gym',\n        completed: false\n      },\n    ]\n  }\n\n    markComplete = (id) => {\n        this.setState({\n          todos: this.state.todos.map(todo => {\n            if(todo.id === id) {\n              // here we need to toggle todo\n              // if i set it to true, it will just stay true\n              // that way if its completed and you click it again, its the opposite\n              todo.completed = !todo.completed\n            }\n            return todo;\n          }) \n        })\n    }\n\n    deleteTodo = (id) => {\n      this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)]});\n    }\n    \n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Todos \n              todos={this.state.todos} \n              markComplete={this.markComplete} \n              deleteTodo={this.deleteTodo}\n          />\n        </header>\n      </div>\n  )};\n}\n\nexport default App;\n\n//funtion component = stateless component / no lifecycle methods\n//class componenent = stateful component with lifecycle methods\n\n"]},"metadata":{},"sourceType":"module"}