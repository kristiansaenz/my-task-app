{"ast":null,"code":"var _jsxFileName = \"/Users/kristian/Desktop/codebase/my-task-app/task-app/src/App.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './pages/About';\nimport uuid from 'uuid';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      //js object called todos\n      todos: []\n    };\n\n    this.markComplete = id => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if (todo.id === id) {\n            // here we need to toggle todo\n            // if i set it to true, it will just stay true\n            // that way if its completed and you click it again, its the opposite\n            todo.completed = !todo.completed;\n          }\n\n          return todo;\n        })\n      });\n    };\n\n    this.deleteTodo = id => {\n      // filter out ids that don't match the id being clicked\n      // basically we want to show other ids, not one we are deleting\n      // spread operator copies curent array of todos\n      this.setState({\n        todos: [...this.state.todos.filter(todo => todo.id !== id)]\n      });\n    };\n\n    this.addTodo = title => {\n      const newTodo = {\n        id: uuid.v4(),\n        title,\n        completed: false //concat returns new array with new todo item\n        // NOTE: i didnt use push because push returns length (num) of new array\n\n      };\n      this.setState({\n        todos: [...this.state.todos.concat(newTodo)]\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10').then(response => this.setState({\n      todos: response.data\n    }));\n  }\n\n  render() {\n    return React.createElement(Router, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(AddTodo, {\n        addTodo: this.addTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(Todos, {\n        todos: this.state.todos,\n        markComplete: this.markComplete,\n        deleteTodo: this.deleteTodo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), React.createElement(Route, {\n      path: \"/about\",\n      component: About,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App; //funtion component = stateless component / no lifecycle methods\n//class componenent = stateful component with lifecycle methods\n// ADD REST CALLS : https://www.youtube.com/watch?v=sBws8MSXN7A&t=1261s","map":{"version":3,"sources":["/Users/kristian/Desktop/codebase/my-task-app/task-app/src/App.js"],"names":["React","BrowserRouter","Router","Route","Todos","Header","AddTodo","About","uuid","axios","App","Component","state","todos","markComplete","id","setState","map","todo","completed","deleteTodo","filter","addTodo","title","newTodo","v4","concat","componentDidMount","get","then","response","data","render","props"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Todos from './components/Todos';\nimport Header from './components/layout/Header';\nimport AddTodo from './components/AddTodo';\nimport About from './pages/About';\nimport uuid from 'uuid';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  state = {\n    \n    //js object called todos\n    todos: []\n  }\n\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n      .then(response => this.setState({ todos: response.data }))\n  }\n\n  markComplete = (id) => {\n      this.setState({\n        todos: this.state.todos.map(todo => {\n          if(todo.id === id) {\n            // here we need to toggle todo\n            // if i set it to true, it will just stay true\n            // that way if its completed and you click it again, its the opposite\n            todo.completed = !todo.completed\n          }\n          return todo;\n        }) \n      })\n  }\n\n  deleteTodo = (id) => {\n    // filter out ids that don't match the id being clicked\n    // basically we want to show other ids, not one we are deleting\n    // spread operator copies curent array of todos\n    this.setState({ todos: [...this.state.todos.filter(todo => todo.id !== id)]});\n  }\n\n  addTodo = (title) => {\n\n      const newTodo = {\n        id: uuid.v4(),\n        title,\n        completed: false\n      }\n\n      //concat returns new array with new todo item\n      // NOTE: i didnt use push because push returns length (num) of new array\n      this.setState({ todos: [...this.state.todos.concat(newTodo)]\n\n      })\n  }\n    \n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n              <Header />\n              <Route exact path=\"/\" render={props => (\n                  <React.Fragment>\n                      <AddTodo addTodo={this.addTodo} />\n                      <Todos \n                          todos={this.state.todos} \n                          markComplete={this.markComplete} \n                          deleteTodo={this.deleteTodo}\n                      />\n                  </React.Fragment>\n              )} />\n              <Route path=\"/about\" component={About} />\n          </div>\n        </div>\n      </Router>\n  )};\n}\n\nexport default App;\n\n//funtion component = stateless component / no lifecycle methods\n//class componenent = stateful component with lifecycle methods\n\n\n// ADD REST CALLS : https://www.youtube.com/watch?v=sBws8MSXN7A&t=1261s\n\n"]},"metadata":{},"sourceType":"module"}